###############################################################################
#                          Created By Josua Koenig                            #
###############################################################################
version: '3.9'

services:
  redis:
    image: redis:latest
    container_name: dev_redis
    volumes:
      - ./redis/redis.conf:/redis.conf
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASS}
    networks:
      - dev    
    command: [ "redis-server", "/redis.conf" ]
    restart: always

  mailhog:
    image: mailhog/mailhog:latest
    container_name: dev_mailhog
    ports:
      - "8125:8025"
    networks:
      - dev  
    restart: always

  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    container_name: dev_mysql
    volumes:
        - ./mysql/data:/var/lib/mysql
        - ./mysql/log:/var/log/mysql
        - ./mysql/conf:/etc/mysql/conf.d
        - ./mysql/create-databases.sql:/docker-entrypoint-initdb.d/1-data.sql
    ports:
      - "3306:3306"
    security_opt:
      - seccomp:unconfined
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - dev  
    restart: always

  nginx:
    image: nginx:latest
    container_name: dev_nginx
    volumes:
        - ./www/:/var/www/:delegated
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        - ./nginx/rewrite.conf:/etc/nginx/snippets/rewrite.conf
    ports:
    - "8888:80"
    links:
    - php-fpm
    networks:
      - dev  
    restart: always

  php-fpm:
    build: 
      context: ./php-fpm
      dockerfile: Dockerfile
    container_name: dev_php-fpm
    volumes:
      - ./www:/var/www/:delegated
      - ./php-fpm/z-overrides.conf:/etc/php/7.4/fpm/pool.d/z-overrides.conf
      - ./php-fpm/php-ini-overrides.ini:/etc/php/7.4/fpm/conf.d/99-overrides.ini
    links:
      - mailhog
      - mysql
      - redis
    networks:
      - dev  
    restart: always

  adminer:
    build:
      context: ./adminer
      dockerfile: Dockerfile
    container_name: dev_adminer
    ports:
      - '8080:8080'
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    links:
      - mysql
    networks:
      - dev  
    restart: always

  #admin
  # pw: portainer
  #portainer
  portainer:
    image: portainer/portainer-ce
    container_name: dev_portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9001:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/:/data
    networks:
      - dev  

networks:
  dev: